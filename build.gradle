plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
    id 'application'
    id 'jacoco'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/SantiPe02/printscript")
        credentials {
            username = project.findProperty("GH_USER") ?: System.getenv("USERNAME")
            password = project.findProperty("GH_PAT") ?: System.getenv("TOKEN")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/TPs-Ingenieria-de-Sistemas/redis-events")
        credentials {
            username = project.findProperty("GH_USER") ?: System.getenv("USERNAME")
            password = project.findProperty("GH_PAT") ?: System.getenv("TOKEN")
        }
    }
}

group = 'com.example'
version = '0.0.2-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'


    implementation 'javax.inject:javax.inject:1'
    // Printscript dependencies
    implementation 'com.github.SantiPe02:interpreter:1.1.0-SNAPSHOT'
    implementation 'com.github.SantiPe02:lexer:1.1.0-SNAPSHOT'
    implementation 'com.github.SantiPe02:parser:1.1.0-SNAPSHOT'
    implementation 'com.github.SantiPe02:linter:1.1.0-SNAPSHOT'
    implementation 'com.github.SantiPe02:formatter:1.1.0-SNAPSHOT'
    implementation 'com.github.SantiPe02:ast:1.1.0-SNAPSHOT'
    implementation 'com.github.SantiPe02:largefilereading:1.1.0-SNAPSHOT'

    // assert equals
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.0" // or the latest version
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.0" // or the latest version

    // redis-events
    implementation 'com.example:redis-events:0.1.5-SNAPSHOT'

    // mocking test
    testImplementation 'io.mockk:mockk:1.13.2' // or the latest version

    // used in AssetService
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
}

tasks.named('test') {
    useJUnitPlatform()
}
application {
    mainClassName = 'com.example.printscriptservice.PrintscriptServiceApplicationKt'
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}


tasks.register("installGitHooks", Copy) {
    from new File(rootProject.rootDir, "hook/pre-commit")
    into { new File(rootProject.rootDir, ".git/hooks") }
}

tasks.named("build") {
    dependsOn("installGitHooks")
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}


jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}
